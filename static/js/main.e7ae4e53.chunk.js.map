{"version":3,"sources":["fbase.js","components/Euneet.js","components/EuneetFactory.js","routes/Home.js","routes/Auth.js","routes/Profile.js","components/Nav.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Euneet","euneetObj","isMine","useState","editing","setEditing","msg","newEuneet","setNewEuneet","onClickForDel","a","window","confirm","doc","id","delete","refFromURL","img","toggleEditing","prev","onSubmitForEdit","e","preventDefault","update","className","onSubmit","type","placeholder","maxLength","value","onChange","target","onClick","icon","faTrashAlt","faPen","src","alt","EuneetFactory","userObj","euneet","setEuneet","setImg","imgURL","imgRef","ref","child","uid","uuidv4","putString","imgRes","getDownloadURL","collection","add","createdAt","Date","now","createId","faTerminal","color","accept","theFile","files","imgReader","FileReader","onloadend","finishedE","result","currentTarget","readAsDataURL","Home","euneets","setEuneets","useEffect","orderBy","onSnapshot","snapshot","euneetArr","docs","map","data","Auth","email","setEmail","password","setPassword","newAccount","setNewAccount","setError","onChage","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","console","log","message","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","required","preV","Profile","refreshUser","displayName","newDisplayName","setNewDisplayName","history","useHistory","onSubmitForUpdateProfile","updateProfile","where","signOut","push","Nav","to","AppRouter","isLogin","exact","path","from","App","init","setInit","setIsLogin","setUserObj","onAuthStateChanged","user","args","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7ae4e53.chunk.js","sourcesContent":["  \r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDQXpdwxGAhafcIrf1Lo3GGRE2YFCx-T7c\",\r\n    authDomain: \"eunitter-a311d.firebaseapp.com\",\r\n    projectId: \"eunitter-a311d\",\r\n    storageBucket: \"eunitter-a311d.appspot.com\",\r\n    messagingSenderId: \"205963816858\",\r\n    appId: \"1:205963816858:web:aa6c1928db896411969423\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPen, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Euneet = ({euneetObj, isMine}) =>{\r\n    //수정중인지 아닌지 판별하는 상태값\r\n    const [editing, setEditing] = useState(false);\r\n    //새로운 메시지를 담을 상태값\r\n    const [newEuneet, setNewEuneet] = useState(euneetObj.msg);\r\n\r\n    const onClickForDel = async () => {\r\n        const chkDel = window.confirm(\"정말로 삭제 하실 건가요?\");\r\n        if(chkDel) {\r\n            await dbService.doc(`euneets/${euneetObj.id}`).delete();\r\n            await storageService.refFromURL(euneetObj.img).delete();\r\n        }\r\n\r\n    };\r\n\r\n    const toggleEditing = () => {\r\n        setEditing((prev) => !prev);\r\n    }\r\n\r\n    const onChagForEdit = (e) =>{\r\n        const {target : {value}} = e;\r\n        setNewEuneet(value);\r\n    }\r\n\r\n    const onSubmitForEdit = async (e) =>{\r\n        e.preventDefault();\r\n        await dbService.doc(`euneets/${euneetObj.id}`).update({\r\n            msg:newEuneet\r\n        })\r\n        toggleEditing()\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <div key={euneetObj.id} className=\"msg-item\">\r\n            {editing ? (\r\n                <>\r\n                <form onSubmit={onSubmitForEdit}>\r\n                    <input type=\"text\" placeholder={euneetObj.msg} maxLength={120} value={newEuneet} onChange={onChagForEdit} />\r\n                </form>\r\n                <button className=\"ok\" onClick={onSubmitForEdit}>확인</button>\r\n                </>\r\n            ):(\r\n                <>\r\n                <h4>{euneetObj.msg}</h4>\r\n                {isMine && (\r\n                    <>\r\n                    <button className=\"msg-del fas fa-pen\" onClick={onClickForDel}>\r\n                        <FontAwesomeIcon icon={faTrashAlt} />\r\n                    </button>\r\n                    <button className=\"msg-mod\" onClick={toggleEditing}>\r\n                        <FontAwesomeIcon icon={faPen} />\r\n                    </button>\r\n                    </>\r\n                )}\r\n                {euneetObj.img && <img src={euneetObj.img} alt=\"업로드 된 이미지\" />}\r\n                </>\r\n            )}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Euneet;","import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { dbService, storageService } from 'fbase';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTerminal } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst EuneetFactory = ({ userObj }) =>{\r\n    const [euneet, setEuneet] = useState(\"\");\r\n    const [img, setImg] = useState(\"\");\r\n\r\n    const onSubmit = async(e) =>{\r\n        e.preventDefault();\r\n        let imgURL=\"\";\r\n        \r\n        if(img){\r\n            const imgRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const imgRes = await imgRef.putString(img, \"data_url\");\r\n            imgURL = await imgRes.ref.getDownloadURL();\r\n        }\r\n\r\n        await dbService.collection(\"euneets\").add({\r\n            msg:euneet, \r\n            createdAt:Date.now(),\r\n            createId : userObj.uid,\r\n            img : imgURL\r\n        });\r\n        setEuneet(\"\")\r\n        setImg(\"\");\r\n    }\r\n    \r\n    const onChage = (e) =>{\r\n        const {target : {value}} = e;\r\n        setEuneet(value);\r\n    }\r\n\r\n    const onChangeForFile = (e) => {\r\n        const {target:{files}} = e;\r\n        const theFile = files[0];\r\n        const imgReader = new FileReader();\r\n    \r\n        imgReader.onloadend = (finishedE) =>{\r\n            const {currentTarget : {result}} = finishedE;\r\n            setImg(result);\r\n        }\r\n        \r\n        //실제 서버로 이미지를 보냄 \r\n        imgReader.readAsDataURL(theFile)\r\n    }\r\n\r\n    const onClickForFileDel = (e) => {\r\n        setImg(null)\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={onSubmit}>\r\n            <div>\r\n                <input type=\"text\" placeholder=\"하고 싶은 말을 입력하세요!\" maxLength={120} value={euneet} onChange={onChage} />\r\n                <button className=\"save\">\r\n                    <FontAwesomeIcon icon={faTerminal} color=\"green\"/>\r\n                </button>\r\n            </div>\r\n            <input type=\"file\" className=\"file\" accept=\"image/*\" onChange={onChangeForFile} />\r\n        {img && (\r\n            <>\r\n            <div className=\"preview-img\">\r\n                <img src={img} alt=\"업로드 하고 싶은 사진의 썸네일 이미지\" />\r\n                <button onClick={onClickForFileDel}>X</button>\r\n            </div>\r\n            </>\r\n        )} \r\n    </form>\r\n    )\r\n};\r\n\r\n\r\nexport default EuneetFactory;","import React, { useEffect, useState } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport Euneet from \"../components/Euneet\";\r\nimport EuneetFactory from \"components/EuneetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [euneets, setEuneets] = useState([]);\r\n\r\n  // *collection 함수를 쓰지 않고 직접 구현\r\n  // *euneets state 에 함수 리턴하는 부분 체크!\r\n  // const getEineets = async() => {\r\n  //     const dbEuneets = await dbService.collection(\"euneets\").get();\r\n  //     dbEuneets.forEach((msg) => {\r\n  //         const euneetObj = {\r\n  //             ...msg.data(),\r\n  //             id : msg.id,\r\n  //         }\r\n  //         console.log(euneetObj)\r\n  //         setEuneets((prev) => [euneetObj, ...prev]);\r\n  //     });\r\n  // }\r\n\r\n  useEffect(() => {\r\n    //getEineets();\r\n    dbService\r\n        .collection(\"euneets\")\r\n        .orderBy(\"createdAt\", \"desc\")\r\n        .onSnapshot((snapshot) => {\r\n      const euneetArr = snapshot.docs.map((msg) => ({\r\n        id: msg.id,\r\n        ...msg.data(),\r\n      }));\r\n      setEuneets(euneetArr);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"home flex-col-center\">\r\n      <EuneetFactory userObj={userObj} />\r\n      <div className=\"msg-list\">\r\n        {euneets.map((euneet) => (\r\n          <Euneet\r\n            key={euneet.id}\r\n            euneetObj={euneet}\r\n            isMine={euneet.createId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { firebaseInstance, authService } from 'fbase';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst Auth = () =>{\r\nconst [email, setEmail] = useState(\"\");\r\nconst [password, setPassword] = useState(\"\");\r\nconst [newAccount, setNewAccount] = useState(\"true\");\r\nconst [error, setError] = useState(\"\");\r\n\r\nconst onChage = (e) =>{\r\n    const {target:{name, value}} = e;\r\n    if(name === \"email\"){\r\n        setEmail(value);\r\n    }else if(name === \"password\"){\r\n        setPassword(value);\r\n    }\r\n}\r\nconst onSubmit = async (e) =>{\r\n    e.preventDefault(); \r\n    try{\r\n        let data;\r\n        if(newAccount){\r\n            //이메일 회원가입\r\n            data = await authService.createUserWithEmailAndPassword(\r\n                email, password\r\n                )\r\n        }else{\r\n            //로그인\r\n            data = await authService.signInWithEmailAndPassword(email, password)\r\n        }\r\n    console.log(data)\r\n    } catch(error){\r\n        setError(error.message)\r\n    }\r\n}\r\n\r\nconst chkAccount = () => setNewAccount(preV => !preV)\r\nconst onSocialClick = async (e) => {\r\n    const {target:{name}} = e;\r\n    let provider;\r\n    if(name === \"google\"){\r\n        provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    }else if(name === \"github\"){\r\n        provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n\r\n    await authService.signInWithPopup(provider);\r\n}\r\nreturn (\r\n    <div className=\"auth flex-col-center\">\r\n        <h1 className=\"home-title\">Eunitter</h1>\r\n        <form onSubmit={onSubmit} className=\"flex-col-center\">\r\n            <input type=\"email\" name=\"email\" placeholder=\"아이디\" required onChange={onChage} />\r\n            <input type=\"password\" name=\"password\" placeholder=\"비밀번호\" required onChange={onChage} />\r\n            <input type=\"submit\" value={newAccount ? \"이메일 회원가입\" : \"로그인\"} />\r\n            <span className=\"is-login\" onClick={chkAccount}>{newAccount ? \"기존의 아이디로 로그인하기\" : \"회원가입\"}</span>\r\n        </form>\r\n        <div className=\"btn-wrap flex-col-center\">\r\n            <button  className=\"google btn\" onClick={onSocialClick} name=\"google\">GOOGLE 로그인</button>\r\n            <button  className=\"github btn\" onClick={onSocialClick} name=\"github\">GITHUB 로그인</button>\r\n        </div>\r\n    </div>\r\n)\r\n} \r\n\r\nexport default Auth;","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { authService, dbService } from 'fbase';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPen } from '@fortawesome/free-solid-svg-icons';\r\nimport Euneet from '../components/Euneet';\r\n\r\nconst Profile = ({userObj, refreshUser}) => {\r\n    const [euneets, setEuneets] = useState([]);\r\n    const [euneet, setEuneet] = useState([]);\r\n\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const history = useHistory();\r\n    \r\n    const onClickForLogout = () =>{\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    } \r\n    \r\n    const onChangeForNewName = (e) => {\r\n        setNewDisplayName(e.currentTarget.value);\r\n        console.log(newDisplayName)\r\n    }\r\n    \r\n    const onSubmitForUpdateProfile = async (e) => {\r\n        e.preventDefault();\r\n        if(userObj.displayName !== newDisplayName){\r\n            await userObj.updateProfile({displayName : newDisplayName});\r\n            refreshUser();\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        dbService\r\n            .collection(\"euneets\")\r\n            .where(\"createId\",\"==\", userObj.uid)\r\n            .orderBy(\"createdAt\", \"desc\")\r\n            .onSnapshot((snapshot) => {\r\n                const euneetArr = snapshot.docs.map((msg) => ({\r\n                    id: msg.id,\r\n                    ...msg.data(),\r\n                }));\r\n            setEuneets(euneetArr);\r\n        });\r\n        console.log(euneets)\r\n    },[])\r\n    \r\n    return(\r\n        <>\r\n        <div className=\"profile flex-col-center\">\r\n            <form onSubmit={onSubmitForUpdateProfile} className=\"flex-center\">\r\n                <input type=\"text\" placeholder={`${userObj.displayName}님 수정할 이름을 입력해주세요!`} onChange={onChangeForNewName}/>\r\n                <button className=\"save\">\r\n                    <FontAwesomeIcon icon={faPen}/>\r\n                </button>\r\n            </form>\r\n            <button onClick={onClickForLogout} className=\"btn logout\">로그아웃</button>\r\n\r\n            <div className=\"home flex-col-center\">\r\n                <div className=\"msg-list\">\r\n                    {euneets.map((euneet) => (\r\n                        <Euneet\r\n                            key={euneet.id}\r\n                            euneetObj={euneet}\r\n                            isMine={true}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Nav = ({userObj}) =>{\r\n    return(\r\n        <nav className=\"flex-col-center\">\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/\" className=\"home-title\">Eunitter</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\">{userObj.displayName ? (\r\n                    userObj.displayName+\"님 환영합니다!\"\r\n                    ):(\r\n                        \"회원님 환영합니다!\"\r\n                    )}</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React, { useState } from 'react';\r\nimport {HashRouter, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Home from '../routes/Home';\r\nimport Auth from '../routes/Auth';\r\nimport Profile from '../routes/Profile';\r\nimport Nav from './Nav';\r\n\r\nconst AppRouter = ({isLogin, userObj, refreshUser}) => {\r\nreturn (\r\n    <HashRouter>\r\n        {isLogin && <Nav userObj={userObj} />}\r\n        <Switch>\r\n            {isLogin ? (\r\n            <>\r\n            <Route exact path=\"/\">\r\n                <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n                <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route> \r\n            </>\r\n            ):(\r\n            <>\r\n            <Route exact path=\"/\">\r\n                <Auth />\r\n            </Route> \r\n            <Redirect from=\"*\" to=\"/\" />\r\n            </>\r\n            )}\r\n        </Switch>\r\n    </HashRouter>\r\n    )\r\n};\r\n\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\r\nimport AppRouter from 'components/Router';\r\nimport {authService} from 'fbase';\r\n\r\nfunction App() {\r\n  //console.log(firebaseInstance)\r\n  //console.log(firebaseInstance.auth())\r\n\r\n  const [init, setInit] = useState(false);\r\n  const [isLogin, setIsLogin] = useState(false);\r\n  const [userObj, setUserObj] = useState({\r\n    displayName:\"\",\r\n    uid:\"\",\r\n  });\r\n  \r\n  useEffect(()=>{\r\n    authService.onAuthStateChanged((user) => {\r\n      if(user){\r\n        setIsLogin(true);\r\n        // setUserObj(user);\r\n        // user 객체의 일정 부문만 가지고 오는 방법\r\n        setUserObj({\r\n          displayName: user.displayName,\r\n          uid: user.uid,\r\n          updateProfile: (args) => user.updateProfile(args)\r\n        })\r\n      }else{\r\n        setIsLogin(false)\r\n      }\r\n      setInit(true)\r\n    });\r\n  }, [])\r\n\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    // setUserObj(Object.assign({},user));\r\n\r\n    //* user 객체의 일부분만을 갱신되는지 감지하게 됨\r\n    setUserObj({\r\n      displayName: user.displayName,\r\n      uid: user.uid,\r\n      updateProfile: (args) => user.updateProfile(args)\r\n    });\r\n  }\r\n\r\n  return (\r\n  <>\r\n  { init ? <AppRouter isLogin={isLogin} userObj={userObj}refreshUser={refreshUser} /> : \"로딩중~\" }\r\n  <footer>&copy; Euitter {new Date().getFullYear()}</footer>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport \"./common.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}